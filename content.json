[{"title":"Flex Layout(转载自阮一峰的博客)","date":"2017-02-06T07:10:57.000Z","path":"2017/02/06/fortest/","text":"一、骰子的布局骰子的一面，最多可以放置9个点。下面，就来看看Flex如何实现，从1个点到9个点的布局。你可以到codepen查看Demo。如果不加说明，本节的HTML模板一律如下。 &lt;div class=&quot;box&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; 上面代码中，div元素（代表骰子的一个面）是Flex容器，span元素（代表一个点）是Flex项目。如果有多个项目，就要添加多个span元素，以此类推。 1.1 单项目首先，只有左上角1个点的情况。Flex布局默认就是首行左对齐，所以一行代码就够了。 .box { display: flex; } 设置项目的对齐方式，就能实现居中对齐和右对齐。 .box { display: flex; justify-content: center; } .box { display: flex; justify-content: flex-end; } .box { display: flex; align-items: center; } .box { display: flex; justify-content: center; align-items: flex-end; } .box { display: flex; justify-content: flex-end; align-items: flex-end; } 1.2 双项目 .box { display: flex; justify-content: space-between; } .box { display: flex; flex-direction: column; justify-content: space-between; } .box { display: flex; flex-direction: column; justify-content: space-between; align-items: center; } .box { display: flex; flex-direction: column; justify-content: space-between; align-items: flex-end; } .box { display: flex; } .item:nth-child(2) { align-self: center; } .box { display: flex; justify-content: space-between; } .item:nth-child(2) { align-self: flex-end; } 1.3 三项目 .box { display: flex; } .item:nth-child(2) { align-self: center; } .item:nth-child(3) { align-self: flex-end; } 1.4 四项目 .box { display: flex; flex-wrap: wrap; justify-content: flex-end; align-content: space-between; } HTML代码如下。 &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;column&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;column&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; CSS代码如下。 .box { display: flex; flex-wrap: wrap; align-content: space-between; } .column { flex-basis: 100%; display: flex; justify-content: space-between; } 1.5 六项目 .box { display: flex; flex-wrap: wrap; align-content: space-between; } .box { display: flex; flex-direction: column; flex-wrap: wrap; align-content: space-between; } HTML代码如下。 &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;row&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;row&quot;&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;span class=&quot;item&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; CSS代码如下。 .box { display: flex; flex-wrap: wrap; } .row{ flex-basis: 100%; display:flex; } .row:nth-child(2){ justify-content: center; } .row:nth-child(3){ justify-content: space-between; } 1.6 九项目 二、网格布局2.1 基本网格布局最简单的网格布局，就是平均分布。在容器里面平均分配空间，跟上面的骰子布局很像，但是需要设置项目的自动缩放。HTML代码如下。 &lt;div class=&quot;Grid&quot;&gt; &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt; &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt; &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt; &lt;/div&gt; CSS代码如下。 .Grid { display: flex; } .Grid-cell { flex: 1; } 2.2 百分比布局某个网格的宽度为固定的百分比，其余网格平均分配剩余的空间。HTML代码如下。 &lt;div class=&quot;Grid&quot;&gt; &lt;div class=&quot;Grid-cell u-1of4&quot;&gt;...&lt;/div&gt; &lt;div class=&quot;Grid-cell&quot;&gt;...&lt;/div&gt; &lt;div class=&quot;Grid-cell u-1of3&quot;&gt;...&lt;/div&gt; &lt;/div&gt; .Grid { display: flex; } .Grid-cell { flex: 1; } .Grid-cell.u-full { flex: 0 0 100%; } .Grid-cell.u-1of2 { flex: 0 0 50%; } .Grid-cell.u-1of3 { flex: 0 0 33.3333%; } .Grid-cell.u-1of4 { flex: 0 0 25%; } 三、圣杯布局圣杯布局（Holy Grail Layout）指的是一种最常见的网站布局。页面从上到下，分成三个部分：头部（header），躯干（body），尾部（footer）。其中躯干又水平分成三栏，从左到右为：导航、主栏、副栏。HTML代码如下。 &lt;body class=&quot;HolyGrail&quot;&gt; &lt;header&gt;...&lt;/header&gt; &lt;div class=&quot;HolyGrail-body&quot;&gt; &lt;main class=&quot;HolyGrail-content&quot;&gt;...&lt;/main&gt; &lt;nav class=&quot;HolyGrail-nav&quot;&gt;...&lt;/nav&gt; &lt;aside class=&quot;HolyGrail-ads&quot;&gt;...&lt;/aside&gt; &lt;/div&gt; &lt;footer&gt;...&lt;/footer&gt; &lt;/body&gt; CSS代码如下。 .HolyGrail { display: flex; min-height: 100vh; flex-direction: column; } header, footer { flex: 1; } .HolyGrail-body { display: flex; flex: 1; } .HolyGrail-content { flex: 1; } .HolyGrail-nav, .HolyGrail-ads { /* 两个边栏的宽度设为12em */ flex: 0 0 12em; } .HolyGrail-nav { /* 导航放到最左边 */ order: -1; } 如果是小屏幕，躯干的三栏自动变为垂直叠加。 @media (max-width: 768px) { .HolyGrail-body { flex-direction: column; flex: 1; } .HolyGrail-nav, .HolyGrail-ads, .HolyGrail-content { flex: auto; } } 四、输入框的布局我们常常需要在输入框的前方添加提示，后方添加按钮。HTML代码如下。 &lt;div class=&quot;InputAddOn&quot;&gt; &lt;span class=&quot;InputAddOn-item&quot;&gt;...&lt;/span&gt; &lt;input class=&quot;InputAddOn-field&quot;&gt; &lt;button class=&quot;InputAddOn-item&quot;&gt;...&lt;/button&gt; &lt;/div&gt; CSS代码如下。 .InputAddOn { display: flex; } .InputAddOn-field { flex: 1; } 五、悬挂式布局有时，主栏的左侧或右侧，需要添加一个图片栏。HTML代码如下。 &lt;div class=&quot;Media&quot;&gt; &lt;img class=&quot;Media-figure&quot; src=&quot;&quot; alt=&quot;&quot;&gt; &lt;p class=&quot;Media-body&quot;&gt;...&lt;/p&gt; &lt;/div&gt; CSS代码如下。 .Media { display: flex; align-items: flex-start; } .Media-figure { margin-right: 1em; } .Media-body { flex: 1; }","tags":[{"name":"CSS布局","slug":"CSS布局","permalink":"http://HeliumLau.github.io/tags/CSS布局/"}]},{"title":"Hello World","date":"2017-02-06T06:26:35.163Z","path":"2017/02/06/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]